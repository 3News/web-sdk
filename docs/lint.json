[
  {
    "name": "Remon#createCast",
    "filePath": "src/Remon.js",
    "lines": [
      {
        "lineNumber": 238,
        "line": "  /**"
      },
      {
        "lineNumber": 239,
        "line": "   * Create a broadcast room"
      },
      {
        "lineNumber": 240,
        "line": "   * @param (string) roomname name of broadcast room. it is no id but name. You can take a real room id from onCreateChannel event"
      },
      {
        "lineNumber": 241,
        "line": "   */"
      },
      {
        "lineNumber": 242,
        "line": "  async createCast(roomname) {"
      }
    ],
    "codeParams": [
      "roomname"
    ],
    "docParams": [
      "(string)"
    ]
  },
  {
    "name": "Remon#joinCast",
    "filePath": "src/Remon.js",
    "lines": [
      {
        "lineNumber": 249,
        "line": "  /**"
      },
      {
        "lineNumber": 250,
        "line": "   * Join a room by room id."
      },
      {
        "lineNumber": 251,
        "line": "   * @param (string) room id"
      },
      {
        "lineNumber": 252,
        "line": "   */"
      },
      {
        "lineNumber": 253,
        "line": "  async joinCast(roomid) {"
      }
    ],
    "codeParams": [
      "roomid"
    ],
    "docParams": [
      "(string)"
    ]
  },
  {
    "name": "Remon#pauseLocalVideo",
    "filePath": "src/Remon.js",
    "lines": [
      {
        "lineNumber": 278,
        "line": "  /**"
      },
      {
        "lineNumber": 279,
        "line": "   * mute local video"
      },
      {
        "lineNumber": 280,
        "line": "   * @param (bool)"
      },
      {
        "lineNumber": 281,
        "line": "   */"
      },
      {
        "lineNumber": 282,
        "line": "  pauseLocalVideo(bool) {"
      }
    ],
    "codeParams": [
      "bool"
    ],
    "docParams": [
      "(bool)"
    ]
  },
  {
    "name": "Remon#pauseRemoteVideo",
    "filePath": "src/Remon.js",
    "lines": [
      {
        "lineNumber": 289,
        "line": "  /**"
      },
      {
        "lineNumber": 290,
        "line": "   * mute remote video"
      },
      {
        "lineNumber": 291,
        "line": "   * @param (bool) bool"
      },
      {
        "lineNumber": 292,
        "line": "   */"
      },
      {
        "lineNumber": 293,
        "line": "  pauseRemoteVideo(bool) {"
      }
    ],
    "codeParams": [
      "bool"
    ],
    "docParams": [
      "(bool)"
    ]
  },
  {
    "name": "Remon#search",
    "filePath": "src/Remon.js",
    "lines": [
      {
        "lineNumber": 331,
        "line": "  /**"
      },
      {
        "lineNumber": 332,
        "line": "   * search P2P channels by id."
      },
      {
        "lineNumber": 333,
        "line": "   * @param (string) id for search. It can be part of full id"
      },
      {
        "lineNumber": 334,
        "line": "   */"
      },
      {
        "lineNumber": 335,
        "line": "  search(id) {"
      }
    ],
    "codeParams": [
      "id"
    ],
    "docParams": [
      "(string)"
    ]
  },
  {
    "name": "Remon#sendMessage",
    "filePath": "src/Remon.js",
    "lines": [
      {
        "lineNumber": 399,
        "line": "  /**"
      },
      {
        "lineNumber": 400,
        "line": "   * It's only function for P2P communication. send message to peer"
      },
      {
        "lineNumber": 401,
        "line": "   * @param (string) userMessage message to peer"
      },
      {
        "lineNumber": 402,
        "line": "   */"
      },
      {
        "lineNumber": 403,
        "line": "  sendMessage(userMessage) {"
      }
    ],
    "codeParams": [
      "userMessage"
    ],
    "docParams": [
      "(string)"
    ]
  }
]