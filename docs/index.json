[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/Configure.js",
    "content": "/* eslint new-cap: ['error', { 'capIsNewExceptions': ['CredentialConfig'] }] */\n\nvar configure = (function Configure() {\n  var config = {\n    rtc: {\n      iceServers: [\n        { urls: \"stun:stun.services.mozilla.com\" },\n        { urls: \"stun:stun.l.google.com:19302\" }\n      ],\n      localStream: undefined,\n      localVideo: undefined,\n      audioType: \"voice\"\n      /*\n      iceTransportPolicy: undefined,\n      bundlePolicy: undefined,\n      rtcpMuxPolicy: undefined,\n      peerIdentity: undefined,\n      certificates: undefined,\n      iceCandidatePoolSize: undefined,\n      */\n    },\n    signalingServer: {\n      url: \"wss://signal.remotemonster.com/ws\"\n      //url: 'wss://apius1.remotemonster.com/ws',\n      //url: 'ws://localhost:8081/ws',\n    },\n    appServer: {\n      url: \"https://signal.remotemonster.com/rest\"\n      //url: 'http://localhost:8081/rest',\n    },\n    sdk: {\n      logLevel: undefined,\n      country: undefined\n    },\n    credential: {\n      key: undefined,\n      serviceId: undefined\n    },\n    view: {\n      local: undefined,\n      remote: undefined\n    },\n    media: {\n      video: true,\n      audio: true\n    }\n  };\n\n  return config;\n})();\n\nexport default configure;\n",
    "static": true,
    "longname": "/home/calmglow/dev/workspace/remon-js-sdk/src/Configure.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "configure",
    "memberof": "src/Configure.js",
    "static": true,
    "longname": "src/Configure.js~configure",
    "access": "public",
    "export": true,
    "importPath": "@remotemonster/sdk/src/Configure.js",
    "importStyle": "configure",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/Remon.js",
    "content": "// import \"webrtc-adapter\";\nimport platform from \"platform\";\nimport Config from \"./Configure\";\nimport Context from \"./Context\";\nimport Media from \"./Media\";\nimport EventManager from \"./EventManager\";\nimport signalingStates from \"./SignalingStates\";\nimport bindPeerConnectionEvents from \"./PeerConnectionHandler\";\nimport SignalingConnection from \"./SignalingConnection\";\nimport bindSignalingConnectionEvents from \"./SignalingConnectionHandler\";\nimport RemonRecorder from \"./RemonRecorder\";\nimport util from \"./Util\";\nimport l from \"./Logger\";\nimport adapter from \"webrtc-adapter\";\n\n/**\n * Most important class for using RemoteMonster API. It can be use to P2P communication and broadcast. You can receive callback events from listener.\n */\nclass Remon {\n  /**\n   * create Remon object with config object and listener object.\n   * example: var v = new Remon({config: rtcConfig, listener: rtcListener});\n   */\n  constructor({ config, listener }) {\n    this.version = \"2.0.17\";\n\n    this.context = new Context();\n    this.context.eventManager = EventManager();\n    this.config = config;\n    this.context.logLevel =\n      this.config.dev && this.config.dev.logLevel\n        ? this.config.dev.logLevel\n        : \"INFO\";\n    util.validateConfig(this.context, this.config);\n    this.media = new Media(this.context);\n    this.context.mediaManager = this.media;\n    this.uri = Config.appServer.url;\n    this.key = this.config.credential.key;\n    this.serviceId = this.config.credential.serviceId;\n    this.context.key = this.key;\n    this.context.serviceId = this.serviceId;\n    this.context.state = \"INIT\";\n    l.init(this.context);\n    if (listener) {\n      Object.keys(listener).forEach(type => {\n        const listenerItem = listener[type];\n        this.context.eventManager.addEventListener({ type, listenerItem });\n      });\n    }\n    if (!this.config.rtc) this.config.rtc = Config.rtc;\n    if (!this.config.media)\n      this.config.media = { audio: true, video: true, record: false };\n    if (this.config.media.record) {\n      this.context.useRecord = this.config.media.record;\n      if (this.config.media.recordUrl)\n        this.context.recordUrl = this.config.media.recordUrl;\n      else\n        this.context.recordUrl = \"https://demo.remotemonster.com/rest/record\";\n    }\n    Config.media = this.config.media;\n    Config.view = this.config.view;\n\n    if (this.config.media.video.codec)\n      this.context.videoCodec = this.config.media.video.codec;\n    if (this.config.media.audio.codec)\n      this.context.audioCodec = this.config.media.audio.codec;\n    if (this.config.media.video === false) this.context.useVideo = false;\n    if (this.config.media.audio === false) this.context.useAudio = false;\n    if (this.config.media.video.maxBandwidth)\n      this.context.videoBandwidth = this.config.media.video.maxBandwidth;\n    if (this.config.media.audio.maxBandwidth)\n      this.context.audioBandwidth = this.config.media.audio.maxBandwidth;\n    if (this.config.credential.resturl) {\n      this.config.credential.resturl = this.config.credential.resturl.replace(\n        \"/init\",\n        \"\"\n      );\n      Config.appServer.url = this.config.credential.resturl;\n      this.uri = Config.appServer.url;\n    }\n    if (this.config.credential.wsurl)\n      Config.signalingServer.url = this.config.credential.wsurl;\n    //this.init();\n  }\n\n  async init() {\n    l.d(\"init is called\");\n    var that = this;\n    var ctx = this.context;\n    var cfg = this.config;\n    var messageBody = {\n      credential: { key: this.key, serviceId: this.serviceId },\n      env: {\n        os: platform.os.family,\n        osVersion: platform.os.version || \"0\",\n        device: platform.name,\n        deviceVersion: platform.version || \"0\",\n        networkType: Navigator.connection,\n        sdkVersion: this.version\n      }\n    };\n    if (this.config.sdk && this.config.sdk.country)\n      messageBody.env.country = this.config.sdk.country;\n    if (this.config.media.roomid) messageBody.id = this.config.media.roomid;\n    var message = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(messageBody)\n    };\n    try {\n      var response = await fetch(this.uri + \"/init\", message);\n      var responseJson = await response.json();\n    } catch (e) {\n      if (ctx.eventManager.hasEventListener(\"onError\")) {\n        ctx.eventManager.dispatchEvent(\"onError\", \"WebSocketFailedError\");\n      }\n      l.e(\"Init: failed:\", error);\n    }\n    l.d(\"-> Message:\", responseJson);\n    Object.keys(responseJson).forEach(responseJsonKey => {\n      switch (responseJsonKey) {\n        case \"iceServers\": {\n          Config.rtc.iceServers = responseJson[responseJsonKey];\n          break;\n        }\n        case \"token\": {\n          ctx.token = responseJson[responseJsonKey];\n          break;\n        }\n        case \"key\": {\n          ctx.channel.id = responseJson[responseJsonKey];\n          break;\n        }\n        case \"name\": {\n          ctx.channel.name = responseJson[responseJsonKey];\n          break;\n        }\n        default: {\n          // l.e(\"Init: Unknown property:\" + responseJsonKey);\n        }\n      }\n    });\n\n    ctx.signalingConnection = await SignalingConnection({\n      url: Config.signalingServer.url,\n      context: ctx\n    });\n    if (cfg.rtc.audioType === \"music\") {\n      cfg.opt = {\n        mandatory: {\n          googHighpassFilter: false,\n          googEchoCancellation: false,\n          googNoiseSuppression: false\n        },\n        optional: [{ googCpuOveruseDetection: false }]\n      };\n    }\n    ctx.peerConnection = new RTCPeerConnection(Config.rtc, cfg.opt);\n    ctx.hasAddTrack = ctx.peerConnection.addTrack !== undefined;\n    bindSignalingConnectionEvents({\n      context: ctx,\n      media: that.media,\n      config: cfg\n    });\n    bindPeerConnectionEvents({ context: ctx, media: that.media });\n    if (cfg.view && typeof cfg.view.local !== \"undefined\")\n      Config.rtc.localVideo = document.querySelector(`${cfg.view.local}`);\n    if (cfg.view && typeof cfg.view.remote !== \"undefined\") {\n      ctx.remoteVideo = document.querySelector(`${cfg.view.remote}`);\n    }\n    if (cfg.media.recvonly) {\n      ctx.remoteVideo = document.querySelector(`${cfg.view.remote}`);\n    }\n\n    const MAX_RETRIES = 11;\n    for (let i = 5; i <= MAX_RETRIES; i++) {\n      // ctx.signalingConnection connection state와 localmedia 들어왔는지, ctx.peerConnection이 제대로 생성되었는지 체크 후 return\n      if (\n        ctx.signalingConnection.isOpened() &&\n        ctx.mediaManager.isLocalPrepared()\n      ) {\n        return;\n      } else {\n        const timeout = Math.pow(2, i);\n        l.v(\"wating for init %i\", i);\n        await this.wait(timeout);\n      }\n    }\n    if (ctx.eventManager.hasEventListener(\"onError\")) {\n      ctx.eventManager.dispatchEvent(\"onError\", \"WebSocketFailedError\");\n    }\n    try {\n      ctx.devices = await navigator.mediaDevices.enumerateDevices();\n      ctx.currentVideoDeviceId = ctx.devices[0].deviceId;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async connectCall(...args) {\n    l.d(\"connect is called\");\n    await this.connectChannel(...args);\n  }\n\n  /**\n   * Create P2P channel, if there is no P2P channel with the id. Join the P2P channel, if there is P2P channel with the id.\n   * example: remon.connectChannel(\"roomname1\");\n   */\n  async connectChannel(...args) {\n    l.d(\"createChannel is called\");\n    this.config.rtc.audioType = \"voice\";\n    await this.init();\n    return this.context.signalingConnection.connectChannel(...args);\n  }\n\n  /**\n   * Create a broadcast room\n   * @param (string) roomname name of broadcast room. it is no id but name. You can take a real room id from onCreateChannel event\n   */\n  async createCast(roomname) {\n    l.d(\"createCast is called\");\n    this.config.rtc.audioType = \"music\";\n    await this.init();\n    this.context.signalingConnection.createBroadcastChannel(roomname);\n  }\n\n  /**\n   * Join a room by room id.\n   * @param (string) room id\n   */\n  async joinCast(roomid) {\n    l.d(\"joinCast is called\");\n    this.config.rtc.audioType = \"music\";\n    await this.init();\n    this.context.signalingConnection.createViewerChannel(roomid);\n  }\n\n  /**\n   * retrieve current stream health information\n   */\n  getHealth() {\n    return this.context.health.result;\n  }\n  /**\n   * retrieve current sdk version\n   */\n  getVersion() {\n    return this.version;\n  }\n  /**\n   * get channel id\n   */\n  getChannelId() {\n    return this.context.channel.id;\n  }\n  /**\n   * mute local video\n   * @param (bool)\n   */\n  pauseLocalVideo(bool) {\n    l.d(\"pauseLocalVideo is called\");\n    this.media\n      .mediaStreamTrackSwitch(Config.rtc.localStream)\n      .type(\"Video\")\n      .enabled(!!bool);\n  }\n  /**\n   * mute remote video\n   * @param (bool) bool\n   */\n  pauseRemoteVideo(bool) {\n    l.d(\"pauseRemoteVideo is called\");\n    this.media\n      .mediaStreamTrackSwitch(this.context.remoteStream)\n      .type(\"Video\")\n      .enabled(!!bool);\n  }\n\n  /**\n   * switch camera between fore and back\n   */\n  cameraSwitch() {\n    l.d(\"cameraSwitch is called\");\n    this.media.setUserDevices(null, this.context.devices[1].deviceId);\n  }\n  /**\n   * mute local audio and mic stream\n   * @param {bool} bool\n   */\n  muteLocalAudio(bool) {\n    this.media\n      .mediaStreamTrackSwitch(Config.rtc.localStream)\n      .type(\"Audio\")\n      .enabled(!!bool);\n  }\n  /**\n   * mute remote audio stream\n   * @param {*} bool\n   */\n  muteRemoteAudio(bool) {\n    this.media\n      .mediaStreamTrackSwitch(this.context.remoteStream)\n      .type(\"Audio\")\n      .enabled(!!bool);\n  }\n  async fetchCalls(id) {\n    return await this.search(id);\n  }\n  /**\n   * search P2P channels by id.\n   * @param (string) id for search. It can be part of full id\n   */\n  search(id) {\n    l.d(\"search by\" + id);\n    // const message = {\n    //   command: \"search\", token: this.context.token,\n    //   serviceId: this.context.serviceId, body: id\n    // };\n    // this.context.signalingConnection.send(JSON.stringify(message));\n    const message = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return new Promise((resolve, reject) => {\n      fetch(\n        this.uri + \"/call/\" + this.config.credential.serviceId,\n        message\n      ).then(response => {\n        response\n          .json()\n          .then(responseJson => {\n            if (this.context.eventManager.hasEventListener(\"onSearch\")) {\n              this.context.eventManager.dispatchEvent(\"onSearch\", responseJson);\n            }\n            resolve(responseJson);\n          })\n          .catch(err => {\n            reject(err);\n          });\n      });\n    });\n  }\n\n  async fetchCasts() {\n    return await this.liveRooms();\n  }\n  /**\n   * Retrieve all broadcast rooms information\n   */\n  liveRooms() {\n    const message = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return new Promise((resolve, reject) => {\n      fetch(\n        this.uri + \"/room/\" + this.config.credential.serviceId,\n        message\n      ).then(response => {\n        response\n          .json()\n          .then(responseJson => {\n            resolve(responseJson);\n          })\n          .catch(err => {\n            reject(err);\n          });\n      });\n    });\n  }\n  /**\n   * It's only function for P2P communication. send message to peer\n   * @param (string) userMessage message to peer\n   */\n  sendMessage(userMessage) {\n    l.g(\"Signaling: Send user message\");\n    const message = this.context.signalingConnection.createMessage({\n      command: \"message\",\n      body: userMessage\n    });\n    l.d(\"Message ->:\", message);\n    this.context.signalingConnection.send(JSON.stringify(message));\n    l.gEnd();\n  }\n\n  /**\n   * close all Remon's resources\n   */\n  close() {\n    l.i(\"Remon.close\");\n    if (this.context.useRecord && this.context.remoteRecorder) {\n      this.context.remoteRecorder.stop();\n      this.context.remoteRecorder = null;\n    }\n    if (this.context.useRecord && this.context.localRecorder) {\n      this.context.localRecorder.stop();\n      this.context.localRecorder = null;\n      this.context.useRecord = false;\n    }\n    if (this.context.remoteVideo && this.context.remoteVideo.srcObject) {\n      this.context.remoteVideo.srcObject\n        .getTracks()\n        .forEach(track => track.stop());\n      this.context.remoteVideo.srcObject = null;\n    }\n\n    if (Config.rtc.localVideo && Config.rtc.localVideo.srcObject) {\n      Config.rtc.localVideo.srcObject\n        .getTracks()\n        .forEach(track => track.stop());\n    }\n    if (this.context.database) {\n      this.context.database\n        .ref(\"/msg/peer/\" + this.context.token)\n        .onDisconnect()\n        .remove();\n      this.context.database\n        .ref(\"/tokens/\" + this.context.serviceId + \"/\" + this.context.token)\n        .onDisconnect()\n        .remove();\n    }\n    if (!this.context.signalingConnection) return;\n    //this.context.localVideo.srcObject = null;\n    // FIXME: Chrome, adapter does not support addTrack.\n    if (!this.context.peerConnection) return;\n    if (this.context.health) this.context.health.stop();\n    if (this.context.hasAddTrack) {\n      this.context.peerConnection.ontrack = null;\n    } else {\n      this.context.peerConnection.onaddstream = null;\n    }\n    this.context.peerConnection.onremovestream = null;\n    this.context.peerConnection.onicecandidate = null;\n    this.context.peerConnection.oniceconnectionstatechange = null;\n    this.context.peerConnection.onsignalingstatechange = null;\n    this.context.peerConnection.onicegatheringstatechange = null;\n    this.context.peerConnection.onnegotiationneeded = null;\n    if (this.context.peerConnection.signalingState !== \"closed\")\n      this.context.peerConnection.close();\n    this.context.peerConnection = null;\n    this.context.signalingConnection.close();\n  }\n\n  wait(timeout) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, timeout);\n    });\n  }\n}\n\nexport default Remon;\n",
    "static": true,
    "longname": "/home/calmglow/dev/workspace/remon-js-sdk/src/Remon.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "Remon",
    "memberof": "src/Remon.js",
    "static": true,
    "longname": "src/Remon.js~Remon",
    "access": "public",
    "export": true,
    "importPath": "@remotemonster/sdk/src/Remon.js",
    "importStyle": "Remon",
    "description": "Most important class for using RemoteMonster API. It can be use to P2P communication and broadcast. You can receive callback events from listener.",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#constructor",
    "access": "public",
    "description": "create Remon object with config object and listener object.\nexample: var v = new Remon({config: rtcConfig, listener: rtcListener});",
    "lineNumber": 24
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "version",
    "memberof": "src/Remon.js~Remon",
    "static": false,
    "longname": "src/Remon.js~Remon#version",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "context",
    "memberof": "src/Remon.js~Remon",
    "static": false,
    "longname": "src/Remon.js~Remon#context",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "config",
    "memberof": "src/Remon.js~Remon",
    "static": false,
    "longname": "src/Remon.js~Remon#config",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "media",
    "memberof": "src/Remon.js~Remon",
    "static": false,
    "longname": "src/Remon.js~Remon#media",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "uri",
    "memberof": "src/Remon.js~Remon",
    "static": false,
    "longname": "src/Remon.js~Remon#uri",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "key",
    "memberof": "src/Remon.js~Remon",
    "static": false,
    "longname": "src/Remon.js~Remon#key",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "serviceId",
    "memberof": "src/Remon.js~Remon",
    "static": false,
    "longname": "src/Remon.js~Remon#serviceId",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "init",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Remon.js~Remon#init",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "connectCall",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Remon.js~Remon#connectCall",
    "access": "public",
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "connectChannel",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Remon.js~Remon#connectChannel",
    "access": "public",
    "description": "Create P2P channel, if there is no P2P channel with the id. Join the P2P channel, if there is P2P channel with the id.\nexample: remon.connectChannel(\"roomname1\");",
    "lineNumber": 212,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "createCast",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Remon.js~Remon#createCast",
    "access": "public",
    "description": "Create a broadcast room",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "(string)",
        "description": "roomname name of broadcast room. it is no id but name. You can take a real room id from onCreateChannel event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "joinCast",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Remon.js~Remon#joinCast",
    "access": "public",
    "description": "Join a room by room id.",
    "lineNumber": 234,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "(string)",
        "description": "room id"
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "getHealth",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#getHealth",
    "access": "public",
    "description": "retrieve current stream health information",
    "lineNumber": 244,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "getVersion",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#getVersion",
    "access": "public",
    "description": "retrieve current sdk version",
    "lineNumber": 250,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "getChannelId",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#getChannelId",
    "access": "public",
    "description": "get channel id",
    "lineNumber": 256,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "pauseLocalVideo",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#pauseLocalVideo",
    "access": "public",
    "description": "mute local video",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "(bool)",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "pauseRemoteVideo",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#pauseRemoteVideo",
    "access": "public",
    "description": "mute remote video",
    "lineNumber": 274,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "(bool)",
        "description": "bool"
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "cameraSwitch",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#cameraSwitch",
    "access": "public",
    "description": "switch camera between fore and back",
    "lineNumber": 285,
    "params": [],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "muteLocalAudio",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#muteLocalAudio",
    "access": "public",
    "description": "mute local audio and mic stream",
    "lineNumber": 293,
    "params": [
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "bool",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "muteRemoteAudio",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#muteRemoteAudio",
    "access": "public",
    "description": "mute remote audio stream",
    "lineNumber": 303,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "bool",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "fetchCalls",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Remon.js~Remon#fetchCalls",
    "access": "public",
    "description": null,
    "lineNumber": 309,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "search",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#search",
    "access": "public",
    "description": "search P2P channels by id.",
    "lineNumber": 316,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "(string)",
        "description": "id for search. It can be part of full id"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "fetchCasts",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/Remon.js~Remon#fetchCasts",
    "access": "public",
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "liveRooms",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#liveRooms",
    "access": "public",
    "description": "Retrieve all broadcast rooms information",
    "lineNumber": 355,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "sendMessage",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#sendMessage",
    "access": "public",
    "description": "It's only function for P2P communication. send message to peer",
    "lineNumber": 382,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "(string)",
        "description": "userMessage message to peer"
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "close",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#close",
    "access": "public",
    "description": "close all Remon's resources",
    "lineNumber": 396,
    "params": [],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "wait",
    "memberof": "src/Remon.js~Remon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Remon.js~Remon#wait",
    "access": "public",
    "description": null,
    "lineNumber": 451,
    "undocument": true,
    "params": [
      {
        "name": "timeout",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/RemonEvents.js",
    "content": "/**\n * RemonEvents 즉 개발서비스에서 처리할 수 있는 이벤트에는 다음과 같이 있다.<br>\n * onInit: RemoteMonster API 서버와 연결이 되었을 때 발생하는 이벤트<br>\n * onConnectChannel: 채널에 연결되었을 때 발생하는 이벤트<br>\n * onCreateChannel: 채널 생성에 성공하였을 때 발생하는 이벤트<br>\n * onComplete: 연결에 성공하였을 때 발생하는 이벤트. 주로 먼저 채널을 만든 쪽에서 발생함<br>\n * onAddLocalStream: 로컬 영상이나 음성을 제어가능하게 받을 수 있을 때 발생하는 이벤트<br>\n * onAddRemoteStream: 상대편 영상이나 음성을 받을 수 있을 때 발생<br>\n * onStateChange: 통신 연결시작부터 종료까지 상태가 변경될 때마다 호출됨<br>\n * onDisconnectChannel: 상대편이 통신을 종료하였을 경우 호출<br>\n * onMessage: 상대방으로부터 메시지를 수신하였을 경우 호출됨<br>\n * onError: 통신 뿐 아니라 모든 과정에서 발생한 오류<br>\n */\nconst remonEvents = (function RemonEvents() {\n  const events = [\n    \"onInit\",\n    \"onConnectChannel\",\n    \"onCreateChannel\",\n    \"onComplete\",\n    \"onConnect\", //for remon 2.0 call interface when create channel is successful\n    \"onDisplayUserMedia\",\n    \"onAddLocalStream\",\n    \"onAddRemoteStream\",\n    \"onStateChange\",\n    \"onDisconnectChannel\",\n    \"onMessage\",\n    \"onError\",\n    \"onStat\",\n    \"onClose\",\n    \"onLog\",\n    \"onJoin\", // for remon 2.0 cast interface when create and join room is successful\n    \"onCreate\" // for remon 2.0 cast interface when create and join room is successful\n  ];\n\n  return Object.freeze(events);\n})();\n\nexport default remonEvents;\n",
    "static": true,
    "longname": "/home/calmglow/dev/workspace/remon-js-sdk/src/RemonEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "remonEvents",
    "memberof": "src/RemonEvents.js",
    "static": true,
    "longname": "src/RemonEvents.js~remonEvents",
    "access": "public",
    "export": true,
    "importPath": "@remotemonster/sdk/src/RemonEvents.js",
    "importStyle": "remonEvents",
    "description": "RemonEvents 즉 개발서비스에서 처리할 수 있는 이벤트에는 다음과 같이 있다.<br>\nonInit: RemoteMonster API 서버와 연결이 되었을 때 발생하는 이벤트<br>\nonConnectChannel: 채널에 연결되었을 때 발생하는 이벤트<br>\nonCreateChannel: 채널 생성에 성공하였을 때 발생하는 이벤트<br>\nonComplete: 연결에 성공하였을 때 발생하는 이벤트. 주로 먼저 채널을 만든 쪽에서 발생함<br>\nonAddLocalStream: 로컬 영상이나 음성을 제어가능하게 받을 수 있을 때 발생하는 이벤트<br>\nonAddRemoteStream: 상대편 영상이나 음성을 받을 수 있을 때 발생<br>\nonStateChange: 통신 연결시작부터 종료까지 상태가 변경될 때마다 호출됨<br>\nonDisconnectChannel: 상대편이 통신을 종료하였을 경우 호출<br>\nonMessage: 상대방으로부터 메시지를 수신하였을 경우 호출됨<br>\nonError: 통신 뿐 아니라 모든 과정에서 발생한 오류<br>",
    "lineNumber": 14,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/SignalingStates.js",
    "content": "const signalingStates = (function SignalingStates() {\n  const states = [\n    \"INIT\",\n    \"WAIT\",\n    \"CONNECT\",\n    \"COMPLETE\",\n    \"CLOSE\",\n    \"EXIT\",\n    \"FAIL\"\n  ];\n\n  return Object.freeze(states);\n})();\n\nexport default signalingStates;\n",
    "static": true,
    "longname": "/home/calmglow/dev/workspace/remon-js-sdk/src/SignalingStates.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "signalingStates",
    "memberof": "src/SignalingStates.js",
    "static": true,
    "longname": "src/SignalingStates.js~signalingStates",
    "access": "public",
    "export": true,
    "importPath": "@remotemonster/sdk/src/SignalingStates.js",
    "importStyle": "signalingStates",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "[![npm](https://img.shields.io/npm/v/@remotemonster/sdk.svg)](https://www.npmjs.com/package/@remotemonster/sdk)\n\n# RemoteMonster web SDK\n\nRemoteMonster - Livecast Management in the Cloud\n\n- [Website](https://remotemonster.com)\n\n## Get SDK\n\n### Package Manager\n\n```bash\nnpm i @remotemonster/sdk\n```\n\n```html\n<script src=\"node_modules/@remotemonster/sdk/remon.min.js\"></script>\n```\n\n### Static import\n\nFrom [jsDelivr](https://www.jsdelivr.com)\n\n```html\n<!-- Latest -->\n<script src=\"https://cdn.jsdelivr.net/npm/@remotemonster/sdk/remon.min.js\"></script>\n\n<!-- Specific version -->\n<script src=\"https://cdn.jsdelivr.net/npm/@remotemonster/sdk@2.0.8/remon.min.js\"></script>\n```\n\n### Downloads\n\n- [Downloads](https://github.com/RemoteMonster/web-sdk/releases/)\n\n## Examples\n\n### Studio\n\n- [demo](https://studio.remotemonster.com/)\n- [source](https://github.com/RemoteMonster/remon-studio)\n\n### Full features - Livecast\n\n- [demo](https://remotemonster.github.io/web-sdk/examples/full-livecast/)\n- [source](https://github.com/RemoteMonster/web-sdk/tree/master/examples/full-livecast/)\n\n### Full features - Communication\n\n- [demo](https://remotemonster.github.io/web-sdk/examples/full-communication/)\n- [source](https://github.com/RemoteMonster/web-sdk/tree/master/examples/full-communication/)\n\n### Simple - Livecast\n\n- [cast - demo](https://remotemonster.github.io/web-sdk/examples/simple-livecast-cast/)\n- [cast - source](https://github.com/RemoteMonster/web-sdk/tree/master/examples/simple-livecast-cast/)\n- [watch - demo](https://remotemonster.github.io/web-sdk/examples/simple-livecast-watch/)\n- [watch - source](https://github.com/RemoteMonster/web-sdk/tree/master/examples/simple-livecast-watch/)\n\n### Simple - Communication\n\n- [demo](https://remotemonster.github.io/web-sdk/examples/simple-communication/)\n- [source](https://github.com/RemoteMonster/web-sdk/tree/master/examples/simple-communication/)\n\n## Documents\n\n- [Guides](https://docs.remotemonster.com/)\n- [API Reference](https://remotemonster.github.io/web-sdk/docs/)\n\n## Changelog\n\n- [Changelog](https://github.com/RemoteMonster/web-sdk/blob/master/CHANGELOG.md)\n",
    "longname": "/home/calmglow/dev/workspace/remon-js-sdk/template/README.md",
    "name": "./template/README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@remotemonster/sdk\",\n  \"version\": \"2.0.17\",\n  \"description\": \"RemoteMonster Web SDK\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"npm run dev\",\n    \"dev\": \"npm run build:dev\",\n    \"test\": \"npm run test:pre && karma start ./test/unit/karma.conf.js --single-run\",\n    \"test:dev\": \"npm run test:pre && karma start ./test/unit/karma.conf.js\",\n    \"test:pre\": \"browserify ./test/unit/tape/tape.js --standalone tape -o ./test/unit/.tmp/tape.js\",\n    \"e2e\": \"nightwatch -c test/e2e/nightwatch.json\",\n    \"prettier\": \"prettier ./src\",\n    \"clean\": \"npm run clean:dist && npm run clean:docs\",\n    \"clean:dist\": \"rm -rf ./dist\",\n    \"clean:docs\": \"rm -rf ./docs\",\n    \"prepublish\": \"npm run build\",\n    \"precommit\": \"pretty-quick --staged\",\n    \"build\": \"npm run clean && npm run build:production && npm run build:docs && npm run build:changelog\",\n    \"build:dev\": \"rollup -c rollup.config.dev.js\",\n    \"build:production\": \"rollup -c rollup.config.prod.js\",\n    \"build:docs\": \"esdoc\",\n    \"build:changelog\": \"standard-changelog\",\n    \"package:template\": \"cp -r template/* release\",\n    \"package:sdk\": \"cp dist/remon.min.js release && cp dist/remon.min.mjs release\",\n    \"package:docs\": \"cp -r docs release\",\n    \"package:changelog\": \"cp CHANGELOG.md release\",\n    \"package\": \"npm run build && npm run package:template && npm run package:sdk && npm run package:changelog && npm run package:docs\",\n    \"deploy:npm\": \"cd release && npm publish --access public\",\n    \"deploy:gh-pages\": \"cd release && npm run deploy\",\n    \"deploy:upload:demo.remotemonster.com:tmp\": \"scp -rp dist/* ubuntu@demo.remotemonster.com:/tmp/web-sdk/dist && scp -rp dev/* ubuntu@demo.remotemonster.com:/tmp/web-sdk\",\n    \"deploy:upload:demo.remotemonster.com\": \"scp -rp dist/* ubuntu@demo.remotemonster.com:/var/www/demo.remotemonster.com/jstest && scp -rp dev/* ubuntu@demo.remotemonster.com:/var/www/demo.remotemonster.com/jstest\",\n    \"deploy:upload\": \"npm run deploy:upload:demo.remotemonster.com\",\n    \"deploy:cdn\": \"scp -rp dist/remon.min.js ubuntu@demo.remotemonster.com:/var/www/cdn.remotemonster.com/sdk/web && scp -rp dist/remon.min.mjs ubuntu@demo.remotemonster.com:/var/www/cdn.remotemonster.com/sdk/web\",\n    \"deploy\": \"npm run deploy:npm && npm run deploy:gh-pages && npm run deploy:upload && npm run deploy:cdn\"\n  },\n  \"author\": \"RemoteMonster\",\n  \"license\": \"UNLICENSED\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"browserify\": \"^16.2.2\",\n    \"chromedriver\": \"^2.38.3\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"firefox-profile\": \"^1.0.0\",\n    \"husky\": \"^0.14.3\",\n    \"karma\": \"^2.0.2\",\n    \"karma-chrome-launcher\": \"^2.0.0\",\n    \"karma-firefox-launcher\": \"^1.0.0\",\n    \"karma-rollup-preprocessor\": \"^6.0.0\",\n    \"karma-tap\": \"^4.1.4\",\n    \"karma-tap-pretty-reporter\": \"^4.0.0\",\n    \"nightwatch\": \"^0.9.21\",\n    \"prettier\": \"^1.13.3\",\n    \"pretty-quick\": \"^1.6.0\",\n    \"rollup\": \"^0.59.2\",\n    \"rollup-plugin-commonjs\": \"^9.1.3\",\n    \"rollup-plugin-livereload\": \"^0.6.0\",\n    \"rollup-plugin-node-resolve\": \"^3.3.0\",\n    \"rollup-plugin-serve\": \"^0.4.2\",\n    \"rollup-plugin-uglify\": \"^3.0.0\",\n    \"standard-changelog\": \"^2.0.0\",\n    \"tap-spec\": \"^4.1.1\",\n    \"tape\": \"^4.9.0\"\n  },\n  \"dependencies\": {\n    \"inline-worker\": \"^1.1.0\",\n    \"platform\": \"^1.3.5\",\n    \"webrtc-adapter\": \"^6.1.5\"\n  }\n}\n",
    "longname": "/home/calmglow/dev/workspace/remon-js-sdk/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]